searchState.loadedDescShard("anvil_zksync_api_decl", 0, "Server trait implementation for the <code>AnvilNamespace</code> RPC API.\nServer trait implementation for the <code>AnvilZksNamespace</code> RPC …\nServer trait implementation for the <code>ConfigNamespace</code> RPC …\nServer trait implementation for the <code>DebugNamespace</code> RPC API.\nServer trait implementation for the <code>EthNamespace</code> RPC API.\nServer trait implementation for the <code>EthTestNamespace</code> RPC …\nServer trait implementation for the <code>EvmNamespace</code> RPC API.\nServer trait implementation for the <code>NetNamespace</code> RPC API.\nServer trait implementation for the <code>Web3Namespace</code> RPC API.\nServer trait implementation for the <code>ZksNamespace</code> RPC API.\nSometimes you may want to advance the latest block number …\nSets auto impersonation status.\nCommit batch’s metadata to L1 (if there is one).\nRemove all transactions from the pool.\nRemoves a transaction from the pool.\nCreate a buffer that represents all state on the chain, …\nExecute batch on L1 (if there is one). Batch needs to be …\nGets node’s auto mining status.\nGet the InMemoryNodeInner’s current_timestamp property\nReturns the witness for a given batch.\nanvil-zksync allows transactions impersonating specific …\nIncrease the current timestamp for the node\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nAppend chain state buffer to current chain. Will overwrite …\nForce a single block to be mined.\nMines a single block in the same way as <code>evm_mine</code> but …\nSend batch’s proof to L1 (if there is one). Batch needs …\nRemoves the block timestamp interval if it exists.\nRemove all transactions from the pool by sender address.\nReset the state of the network back to a fresh forked …\nRevert the state of the blockchain to a previous snapshot. …\nEnables or disables, based on the single boolean argument, …\nSets the balance of the given address to the given balance.\nSets the block timestamp interval. All future blocks’ …\nSets the chain id.\nModifies the bytecode stored at an account’s address.\nSets the mining behavior to interval with the given …\nSet the logging for the InMemoryNodeInner\nSet the logging for the InMemoryNodeInner\nEnable or disable logging.\nSet the minimum gas price for the node. Unsupported for …\nSets the base fee of the next block.\nSet timestamp for the next block. The timestamp must be in …\nModifies an account’s nonce by overwriting it.\nSets the fork RPC url. Assumes the underlying chain is the …\nSet show_gas_details for the InMemoryNodeInner\nSet show_node_config for the InMemoryNodeInner\nSet show_storage_logs for the InMemoryNodeInner\nSet show_vm_details for the InMemoryNodeInner\nDirectly modifies the storage of a contract at a specified …\nSet the current timestamp for the node. Warning: This will …\nSnapshot the state of the blockchain at the current block. …\nUse this method to stop impersonating an account after …")